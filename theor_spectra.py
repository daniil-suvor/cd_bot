import numpy as np
theor_left = 185
theor_right = 260
theor_len = theor_right - theor_left
def lst_theor(left, right):
	d_alpha = alpha[left - theor_left : theor_len - (theor_right - right)]
	d_beta = beta[left - theor_left : theor_len - (theor_right - right)]
	d_apereodic = apereodic[left - theor_left : theor_len - (theor_right - right)]
	return [d_alpha, d_beta, d_apereodic]
def lst_theor_5(left, right):
	d_alpha = alpha[left - theor_left : theor_len - (theor_right - right)]
	d_beta = beta[left - theor_left : theor_len - (theor_right - right)]
	d_apereodic = apereodic[left - theor_left : theor_len - (theor_right - right)]
	d_turn_1 = turn_1[left - theor_left : theor_len - (theor_right - right)]
	d_turn_2 = turn_2[left - theor_left : theor_len - (theor_right - right)]
	return [d_alpha, d_beta, d_apereodic, d_turn_1, d_turn_2]

alpha_reverse = np.array([-0.0003, -0.0005, -0.001, -0.0018, -0.0031, -0.0054,
		-0.0092, -0.0155, -0.0255, -0.0413, -0.0657, -0.1028,
		-0.1581, -0.2391, -0.3553, -0.5189, -0.7452, -1.0518,
		-1.4594, -1.9905, -2.6687 ,-3.5171, -4.5566, -5.8029,
		-7.2645, -8.9399, -10.8148, -12.8612, -15.0359, -17.2814,
		-19.5281, -21.6979, -23.7092, -25.4834, -26.952, -28.0631,
		-28.7876, -29.1241, -29.1002, -28.7723, -28.2212, -27.5448,
		-26.8478, -26.2294, -25.7699, -25.5181, -25.4806, -25.6144,
		-25.8238, -25.9634, -25.8454, -25.2523, -23.9534, -21.7246,
		-18.3693, -13.7411, -7.7656, -0.4599, 8.0519, 17.5297,
		27.6188, 37.8647, 47.7407, 56.6908, 64.1817, 69.7587,
		73.0979, 74.0439, 72.6292, 69.0681, 63.7284, 57.084,
		49.6576, 41.9627, 34.4531, 27.4876], dtype='float')
beta_reverse = np.array([-0.001, -0.0015, -0.0023, -0.0034, -0.0051, -0.0075,
		-0.011, -0.0159, -0.0229, -0.0326, -0.0459, -0.0641,
		-0.0887, -0.1216, -0.165, -0.2219, -0.2955, -0.3898,
		-0.5093, -0.6592-0.8451, -1.0731, -1.3498, -1.6818,
		-2.0755, -2.5371, -3.0719, -3.6843, -4.3768, -5.1501,
		-6.0024, -6.9291, -7.9225, -8.9715, -10.0614, -11.174,
		-12.2876, -13.3772, -14.4145, -15.3689, -16.2071, -16.8939,
		-17.3929, -17.6664, -17.6766, -17.3864, -16.7604, -15.7663,
		-14.3774, -12.5746, -10.3493, -7.7065, -4.668, -1.2743,
		2.4128, 6.3107, 10.3171, 14.3131, 18.1687, 21.7501, 24.9274,
		27.5842, 29.6255, 30.9849, 31.6301, 31.5647, 30.8279,
		29.4906, 27.6493, 25.4182, 22.92, 20,2773, 17.6044,
		15.0008, 12.5472, 10.3029] , dtype = 'float')
apereodic_reverse = np.array([0, 0.0001, 0.0001, 0.0002, 0.0003, 0.0004, 0.0006,
		      0.0009, 0.0013, 0.002, 0.0029, 0.0042, 0.0061, 0.0087,
		      0.0122, 0.0171, 0.0237, 0.0325, 0.0443, 0.0596, 0.0796,
		      0.1053, 0.1379, 0.1791, 0.2303, 0.2935, 0.3706, 0.464,
		      0.5765, 0.7119, 0.876, 1.0772, 1.3265, 1.6357, 2.0111,
		      2.4463, 2.9165, 3.3796, 3.7872, 4.1012, 4.306, 4.4097,
		      4.431, 4.3825, 4.2568, 4.0235, 3.6346, 3.0321, 2.1569,
		      0.953, -0.6275, -2.6212, -5.0483, -7.9085, -11.1756,
		      -14.7943, -18.6783, -22.7113, -26.7513, -30.6376,
		      -34.2014, -37.2774, -39.7171, -41.4013, -42.2501,
		      -42.2301, -41.357, -39.694, -37.3455, -34.4475,
		      -31.1555, -27.6319, -24.0336, -20.5012, -17.152,
		      -14.0746] , dtype = 'float')
turn_1_reverse = np.array([-0.0154, -0.019, -0.0233, -0.0286, -0.0349, -0.0424,
		   -0.0514, -0.062, -0.0746, -0.0895, -0.1069, -0.1272,
		   -0.1509, -0.1784, -0.2101, -0.2466, -0.2883, -0.336,
		   -0.3901, -0.4514, -0.5204, -0.5979, -0.6844, -0.7807,
		   -0.8874, -1.0051, -1.1343, -1.2757, -1.4295, -1.5962,
		   -1.776, -1.9691, -2.1753, -2.3947 , -2.6269, -2.8713,
		   -3.1273, -3.394, -3.6704, -3.9553, -4.2471, -4.5442,
		   -4.8447, -5.1467, -5.4478, -5.7456, -6.0371, -6.3193,
		   -6.5883, -6.8394, -7.0667, -7.263, -7.4184, -7.5208,
		   -7.5549, -7.5018, -7.3401, -7.0459, -6.5952, -5.966,
		   -5.1424, -4.1178, -2.8996, -1.5121, 0.0019, 1.5811,
		   3.1492, 4.6207, 5.9087, 6.9346, 7.6363, 7.9767, 7.9471,
		   7.5691, 6.8906, 5.9802], dtype = 'float')
turn_2_reverse = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0001,
		   -0.0002, -0.0004, -0.0009, -0.0018, -0.0037, -0.0072,
		   -0.0132, -0.0233, -0.0392, -0.0633, -0.0977, -0.1444,
		   -0.2041, -0.2761, -0.3574, -0.4426, -0.5245, -0.5945,
		   -0.6446, -0.6683, -0.662, -0.6255, -0.5621, -0.477,
		   -0.3762, -0.2646, -0.1448, -0.0164, 0.124, 0.2821,
		   0.4644, 0.6761, 0.9202, 1.195, 1.4938, 1.804, 2.1085,
		   2.3867, 2.6174, 2.7814, 2.864, 2.8577, 2.7632, 2.5891,
		   2.3509, 2.0686, 1.7638, 1.4574, 1.1669, 0.9055, 0.6808,
		   0.4961, 0.3503, 0.2397, 0.1589, 0.1021, 0.0636, 0.0384,
		   0.0224], dtype = 'float')
alpha = np.array([
		  2.74876e+01,  3.44531e+01,  4.19627e+01,  4.96576e+01,  5.70840e+01,
  		  6.37284e+01,  6.90681e+01,  7.26292e+01,  7.40439e+01,  7.30979e+01,
		  6.97587e+01,  6.41817e+01,  5.66908e+01,  4.77407e+01,  3.78647e+01,
		  2.76188e+01,  1.75297e+01,  8.05190e+00, -4.59900e-01, -7.76560e+00,
		  -1.37411e+01, -1.83693e+01, -2.17246e+01, -2.39534e+01, -2.52523e+01,
		  -2.58454e+01, -2.59634e+01, -2.58238e+01, -2.56144e+01, -2.54806e+01,
		  -2.55181e+01, -2.57699e+01, -2.62294e+01, -2.68478e+01, -2.75448e+01,
		  -2.82212e+01, -2.87723e+01, -2.91002e+01, -2.91241e+01, -2.87876e+01,
		  -2.80631e+01, -2.69520e+01, -2.54834e+01, -2.37092e+01, -2.16979e+01,
		  -1.95281e+01, -1.72814e+01, -1.50359e+01, -1.28612e+01, -1.08148e+01,
		  -8.93990e+00, -7.26450e+00, -5.80290e+00, -4.55660e+00, -3.51710e+00,
		  -2.66870e+00, -1.99050e+00, -1.45940e+00, -1.05180e+00, -7.45200e-01,
		  -5.18900e-01, -3.55300e-01, -2.39100e-01, -1.58100e-01, -1.02800e-01,
		  -6.57000e-02, -4.13000e-02, -2.55000e-02, -1.55000e-02, -9.20000e-03,
		  -5.40000e-03, -3.10000e-03, -1.80000e-03, -1.00000e-03, -5.00000e-04,
		  -3.00000e-04], dtype = 'float')
beta = np.array([
  1.03029e+01,  1.25472e+01,  1.50008e+01,  1.76044e+01,  2.77300e+03,
  2.00000e+01,  2.29200e+01,  2.54182e+01,  2.76493e+01,  2.94906e+01,
  3.08279e+01,  3.15647e+01,  3.16301e+01,  3.09849e+01,  2.96255e+01,
  2.75842e+01,  2.49274e+01,  2.17501e+01,  1.81687e+01,  1.43131e+01,
  1.03171e+01,  6.31070e+00,  2.41280e+00, -1.27430e+00, -4.66800e+00,
 -7.70650e+00, -1.03493e+01, -1.25746e+01, -1.43774e+01, -1.57663e+01,
 -1.67604e+01, -1.73864e+01, -1.76766e+01, -1.76664e+01, -1.73929e+01,
 -1.68939e+01, -1.62071e+01, -1.53689e+01, -1.44145e+01, -1.33772e+01,
 -1.22876e+01, -1.11740e+01, -1.00614e+01, -8.97150e+00, -7.92250e+00,
 -6.92910e+00, -6.00240e+00, -5.15010e+00, -4.37680e+00, -3.68430e+00,
 -3.07190e+00, -2.53710e+00, -2.07550e+00, -1.68180e+00, -1.34980e+00,
 -1.07310e+00, -1.50430e+00, -5.09300e-01, -3.89800e-01, -2.95500e-01,
 -2.21900e-01, -1.65000e-01, -1.21600e-01, -8.87000e-02, -6.41000e-02,
 -4.59000e-02, -3.26000e-02, -2.29000e-02, -1.59000e-02, -1.10000e-02,
 -7.50000e-03, -5.10000e-03, -3.40000e-03, -2.30000e-03, -1.50000e-03,
 -1.00000e-03], dtype = 'float')

apereodic = np.array([
 -1.40746e+01, -1.71520e+01, -2.05012e+01, -2.40336e+01, -2.76319e+01,
 -3.11555e+01, -3.44475e+01, -3.73455e+01, -3.96940e+01, -4.13570e+01,
 -4.22301e+01, -4.22501e+01, -4.14013e+01, -3.97171e+01, -3.72774e+01,
 -3.42014e+01, -3.06376e+01, -2.67513e+01, -2.27113e+01, -1.86783e+01,
 -1.47943e+01, -1.11756e+01, -7.90850e+00, -5.04830e+00, -2.62120e+00,
 -6.27500e-01,  9.53000e-01,  2.15690e+00,  3.03210e+00,  3.63460e+00,
  4.02350e+00,  4.25680e+00,  4.38250e+00,  4.43100e+00,  4.40970e+00,
  4.30600e+00,  4.10120e+00,  3.78720e+00,  3.37960e+00,  2.91650e+00,
  2.44630e+00,  2.01110e+00,  1.63570e+00,  1.32650e+00,  1.07720e+00,
  8.76000e-01,  7.11900e-01,  5.76500e-01,  4.64000e-01,  3.70600e-01,
  2.93500e-01,  2.30300e-01,  1.79100e-01,  1.37900e-01,  1.05300e-01,
  7.96000e-02,  5.96000e-02,  4.43000e-02,  3.25000e-02,  2.37000e-02,
  1.71000e-02,  1.22000e-02,  8.70000e-03,  6.10000e-03,  4.20000e-03,
  2.90000e-03,  2.00000e-03,  1.30000e-03,  9.00000e-04,  6.00000e-04,
  4.00000e-04,  3.00000e-04,  2.00000e-04,  1.00000e-04,  1.00000e-04,
  0.00000e+00], dtype = 'float')
